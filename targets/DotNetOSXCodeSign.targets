<!--

    DotNetOSXCodeSign.targets
    
    Uses the 'rcodesign' utility to sign the resulting AppHost executable.

-->

<Project>
    <PropertyGroup>
        <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    </PropertyGroup>

    <PropertyGroup>
        <EnableOSXCodeSign Condition="!$([MSBuild]::IsOSPlatform('OSX')) And '$(EnableOSXCodeSign)' == '' And ($(RuntimeIdentifier.StartsWith('osx')) Or $(AppHostRuntimeIdentifier.StartsWith('osx')))">true</EnableOSXCodeSign>
        <OSXCodeSignCommand Condition=" '$(OSXCodeSignExe)' == '' And  $([MSBuild]::IsOSPlatform('OSX'))">codesign -sf</OSXCodeSignCommand>
        <OSXCodeSignCommand Condition=" '$(OSXCodeSignExe)' == '' And !$([MSBuild]::IsOSPlatform('OSX'))">rcodesign sign</OSXCodeSignCommand>
        <_OSXCodeSignStampFile>$(IntermediateOutputPath)$(MSBuildProjectFile).rcodesign.stamp</_OSXCodeSignStampFile>
    </PropertyGroup>

    <Target Name="OSXCodeSignAppHost" AfterTargets="_CreateAppHost" Inputs="$(AppHostIntermediatePath)" Outputs="$(_OSXCodeSignStampFile)" Condition=" '$(EnableOSXCodeSign)' == 'true' And Exists('$(AppHostIntermediatePath)')">
        <Message Text="$(OSXCodeSignCommand) $(AppHostIntermediatePath)" />
        <Exec Command="$(OSXCodeSignCommand) $(AppHostIntermediatePath)" />
        <Touch Files="$(_OSXCodeSignStampFile)" ForceTouch="true" AlwaysCreate="true" />
    </Target>

</Project>
